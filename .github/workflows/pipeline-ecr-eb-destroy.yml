name: destroy-infrastructure

on:
  workflow_dispatch:

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  AWS_SESSION_TOKEN: ${{ secrets.AWS_SESSION_TOKEN }}
  AWS_REGION: ${{ vars.AWS_REGION }}
  PROJECT_NAME: ${{ vars.PROJECT_NAME }}
  MODULE_NAME: ${{ vars.MODULE_NAME }}
  S3_BUCKET: ${{ vars.BUCKET_S3 }}

jobs:
  destroy:
    runs-on: ubuntu-latest
    env:
      TF_VAR_AWS_REGION: ${{ vars.AWS_REGION }}
      TF_VAR_PROJECT_NAME: ${{ vars.PROJECT_NAME }}
      TF_VAR_MODULE_NAME: ${{ vars.MODULE_NAME }}
      TF_VAR_S3_BUCKET: ${{ vars.BUCKET_S3 }}
      TF_VAR_SOLUTION_STACK_NAME: ${{ vars.STACK_NAME }}
      TF_VAR_WORKING_DIR: ".environment"
      TF_VAR_STATE_FILE: "state/terraform.tfstate"

    steps:
      - uses: actions/checkout@v4

      - uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        run: |
          terraform -chdir=$TF_VAR_WORKING_DIR init \
            -backend-config="bucket=$TF_VAR_S3_BUCKET" \
            -backend-config="key=$TF_VAR_STATE_FILE"

      - name: Terraform Destroy
        run: |
          terraform -chdir=$TF_VAR_WORKING_DIR destroy -auto-approve